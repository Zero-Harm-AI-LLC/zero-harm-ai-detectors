name: Update Backend and Deploy

on:
  push:
    branches: [ main, master ]
    paths:
      - 'zero_harm_detectors/**'
      - 'setup.py'
      - 'requirements.txt'
      - 'version.txt'
  workflow_dispatch:

jobs:
  test-library:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Install package
      run: pip install -e .
    
    - name: Run tests
      run: |
        pytest tests/ --cov=zero_harm_detectors --cov-report=xml
      continue-on-error: true

  update-backend:
    needs: test-library
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout library repo
      uses: actions/checkout@v4
      with:
        path: library
    
    - name: Checkout backend repo
      uses: actions/checkout@v4
      with:
        repository: Zero-Harm-AI-LLC/zero-harm-ai-backend
        token: ${{ secrets.BACKEND_REPO_TOKEN }}
        path: backend
    
    - name: Update library files in backend
      run: |
        # Copy the library files to the backend
        cp library/zero_harm_detectors/detectors.py backend/detectors.py
        cp library/zero_harm_detectors/harmful_detector.py backend/detect_harmful.py
        
        # Update version in backend requirements or somewhere else if needed
        cd backend
        
        # Commit changes
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if git diff --quiet; then
          echo "No changes to commit"
        else
          git add .
          git commit -m "Auto-update detectors from library repo ($(cat ../library/version.txt))"
          git push
        fi
    
    - name: Trigger Render Deploy
      if: success()
      run: |
        curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
    
    - name: Create Release (Optional)
      if: success()
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release v${{ env.VERSION }}
        body: |
          Automated release triggered by backend deployment.
          Backend updated and deployed to Render.
        draft: false
        prerelease: false